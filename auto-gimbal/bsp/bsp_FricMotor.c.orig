#include "bsp_FricMotor.h"
#include "tim.h"
#include "pid.h"
#include "math_calcu.h"
#include "remote_msg.h"
#include "shoot_task.h"
#include "modeswitch_task.h"
#include "control_def.h"

static void FricGunControl(uint16_t pwm, int16_t err_1, int16_t err_2);

Slope_Struct shoot_Fric_pwm;

void FricMotor_init(void)
{
    //900-2000
    //启动时，油门打到最低
    HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_3);
    HAL_TIM_PWM_Start(&htim3,TIM_CHANNEL_4);
    HAL_TIM_PWM_Start(&htim12,TIM_CHANNEL_1);
    HAL_TIM_PWM_Start(&htim12,TIM_CHANNEL_2);

    FricMotor_PWM1 = Init_PWM;
    FricMotor_PWM2 = Init_PWM;
    /* 初始化摩擦轮斜坡函数 */
    shoot_Fric_pwm.limit_target = Init_PWM;
    shoot_Fric_pwm.real_target  = Init_PWM;
    shoot_Fric_pwm.change_scale = 0.5;

    /* 初始化射速 */
    shoot.shoot_speed = 15;
}

/**
  * @func   		void FricGunControl(uint8_t Control)
  * @bref			摩擦轮起停
  * @param[in]      Control：0为停止，1为启动
  * @retval         void
  * @note			900以上起转
  */
static void FricGunControl(uint16_t pwm, int16_t err_1, int16_t err_2)
{
    shoot_Fric_pwm.limit_target = Init_PWM+pwm;

    if( lock_flag )			//解锁后才能够输出PWM
    {
        Slope_On(&shoot_Fric_pwm); //上摩擦轮斜坡启动

        FricMotor_PWM1 = shoot_Fric_pwm.real_target + err_1;
        FricMotor_PWM2 = shoot_Fric_pwm.real_target + err_2;
    }
}

/* 1格电--14m/s */
//0    右：5055 左：5075 差距：-20
//30   右：5385 左：4760 差距：625
//-10  右：4955 左：5195 差距：-240
//-5   右：5010 左：5135 差距：-125
//-2   右：5040 左：5112 差距：-72
//-1   右：5052 左：5103 差距：-51
//2    右：5084 左：5070 差距：14
//1    右：5073 左：5074 差距：2

/* 28m/s */
//1    右：8965 左：8970 差距：5

/* 1格电--14m/s */
//1    右：5290 左：4875 差距：415
//5    右：5114 左：5030 差距：84
//6    右：5125 左：5020 差距：105
//7    右：5135 左：5010 差距：125

//左：0   5055 右：0   5085
//左：10  5160 
//左：5   5108
//左：3   5095 右：0   5091


int16_t pwm_1 = 3, pwm_2 = 0;
//uint16_t test_pwm = 550;
//左：

/**
  * @name     FricMotor_Control
  * @brief    摩擦轮控制
  * @param    None
  * @retval   None
  * @note     无论单双枪管，一经开火模式，摩擦轮都打开；拨盘会根据枪管模式不同而有区别
  */
void FricMotor_Control(void)
{
    switch( shoot.firc_mode )
    {
    case FRIC_STOP_MODE:
    {
        FricGunControl(0, 0, 0);		//摩擦轮停转
        break;
    }
    case FRIC_FIRE_MODE:
    {
        if( shoot.shoot_speed == 15 )
        {
            FricGunControl(LOW_SPEED, pwm_1, pwm_2);// LOW_SPEED
        }
        else if( shoot.shoot_speed == 18 )
        {
            FricGunControl(MID_SPEED, pwm_1, pwm_2);  //MID_SPEED
        }
        else if( shoot.shoot_speed == 30 )
        {
            FricGunControl(HIGH_SPEED, pwm_1, pwm_2);  //HIGH_SPEED
        }
        break;
    }
    default:
    {
        break;
    }
    }
}
